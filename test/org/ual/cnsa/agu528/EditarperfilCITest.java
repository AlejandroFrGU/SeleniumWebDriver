// Generated by Selenium IDE
package org.ual.cnsa.agu528;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class EditarperfilCITest {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@Before
	public void setUp() {
		System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe");
		// System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");
		// driver = new ChromeDriver();
		FirefoxOptions firefoxOptions = new FirefoxOptions();
		firefoxOptions.setHeadless(true);
		//firefoxOptions.addArguments("--headless");
		//firefoxOptions.addArguments("--width=1920");
		//firefoxOptions.addArguments("--height=1080");
		
		//firefoxOptions.addArguments("window-size=1440,900");
		//driver.manage().window().setSize(new Dimension(1080, 824));
		driver = new FirefoxDriver(firefoxOptions);
		driver.manage().window().maximize();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	@Test
	public void editarperfilCI() {

		// Test name: Editar el usuario logueado(CI)
		// Step # | name | target | value
		// 1 | open | / |
		driver.get("http://webapps.alejandrogacles.tech:8080//");
		// 2 | setWindowSize | 1009x728 |
		driver.manage().window().setSize(new Dimension(1070, 728));
		// 3 | click | linkText=Log in |
		driver.findElement(By.linkText("Log in")).click();
		// 4 | click | css=.form-group:nth-child(1) > .form-control |
		// driver.findElement(By.cssSelector(".form-group:nth-child(1) >
		// .form-control")).click();
		// 5 | type | css=.form-group:nth-child(1) > .form-control | user1@ual.es
		driver.findElement(By.cssSelector(".form-group:nth-child(1) > .form-control")).sendKeys("ual1@ual.es");
		// 6 | type | css=.form-group:nth-child(2) > .form-control | user123
		driver.findElement(By.cssSelector(".form-group:nth-child(2) > .form-control")).sendKeys("ual123");
		// 7 | click | css=.button-text |
		driver.findElement(By.cssSelector(".button-text")).click();
		// 7 | mouseOver | css=.button-text |
		// 8 | mouseOut | css=.button-loader |
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(By.id("header-account-menu-link")));
		}
		// 9 | click | id=header-account-menu-link |
		driver.findElement(By.id("header-account-menu-link")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Settings")));
		}
		// 10 | click | linkText=Settings |
		driver.findElement(By.linkText("Settings")).click();
		// 11 | click | linkText=Edit profile |
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Edit profile")));
		}
		driver.findElement(By.linkText("Edit profile")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(By.id("full-name")));
		}
		driver.findElement(By.id("full-name")).sendKeys(Keys.chord(Keys.CONTROL, "a"));
		driver.findElement(By.id("full-name")).sendKeys(Keys.chord(Keys.DELETE));

		// 12 | click | css=.row:nth-child(1) > .col-sm-6:nth-child(1) |
		// driver.findElement(By.cssSelector(".row:nth-child(1) >
		// .col-sm-6:nth-child(1)")).click();
		driver.findElement(By.id("email-address")).sendKeys(Keys.chord(Keys.CONTROL, "a"));
		driver.findElement(By.id("email-address")).sendKeys(Keys.chord(Keys.DELETE));

		// 13 | click | css=.button-text |
		driver.findElement(By.cssSelector(".button-text")).click();
		// 14 | mouseOver | css=.button-text |
		{
			WebElement element = driver.findElement(By.cssSelector(".button-text"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		// 15 | mouseOut | css=.button-text |
		{
			WebElement element = driver.findElement(By.tagName("body"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element, 0, 0).perform();
		}
		// 16 | click | css=.row:nth-child(1) > .col-sm-6:nth-child(1) |
		// driver.findElement(By.cssSelector(".row:nth-child(1) >
		// .col-sm-6:nth-child(1)")).click();
		// 17 | assertText | css=.invalid-feedback | Please enter your full name.
		assertThat(driver.findElement(By.cssSelector(".invalid-feedback")).getText(),
				is("Please enter your full name."));
		assertThat(driver.findElement(By.cssSelector(".col-sm-6:nth-child(2) .invalid-feedback")).getText(),
				is("Please enter a valid email address."));
		// 18 | click | css=.row:nth-child(1) > .col-sm-6:nth-child(2) |
		// driver.findElement(By.cssSelector(".row:nth-child(1) >
		// .col-sm-6:nth-child(2)")).click();
		// 19 | click | css=.button-text |
		driver.findElement(By.cssSelector(".button-text")).click();
		// 20 | mouseOver | css=.button-text |
		{
			WebElement element = driver.findElement(By.cssSelector(".button-text"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		// 21 | mouseOut | css=.button-text |
		{
			WebElement element = driver.findElement(By.tagName("body"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element, 0, 0).perform();
		}
		// 22 | click | css=.row:nth-child(1) > .col-sm-6:nth-child(2) |
		// driver.findElement(By.cssSelector(".row:nth-child(1) >
		// .col-sm-6:nth-child(2)")).click();
		// 23 | assertText | css=.col-sm-6:nth-child(2) .invalid-feedback | Please enter
		// a valid email address.

		// 24 | click | linkText=Cancel |

		{
			WebElement element = driver.findElement(By.tagName("body"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element, 0, 0).perform();
		}
		// 40 | click | id=header-account-menu-link |
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(By.id("header-account-menu-link")));
		}
		driver.findElement(By.id("header-account-menu-link")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Sign out")));
		}
		driver.findElement(By.linkText("Sign out")).click();
	}
}
